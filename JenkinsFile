pipeline {
    agent any
     tools {
        nodejs 'node-18' 
    }

    environment {
        AZURE_REPOSITORY_URL = credentials('AZURE_REPOSITORY_URL') // Define Jenkins Credentials for secrets
        ACR_USERNAME = credentials('ACR_USERNAME')
        ACR_PASSWORD = credentials('ACR_PASSWORD')
    }

    triggers {
        pollSCM('* * * * *') // optional: for automatic polling, replace with webhook if needed
    }

    stages {
        stage('Checkout Repository') {
            steps {
                checkout scm
            }
        }
        stage('Initialize'){
            steps {
            def dockerHome = tool 'myDocker'
            env.PATH = "${dockerHome}/bin:${env.PATH}"
            }
        }

        stage('Set up Docker Buildx') {
            steps {
                sh '''
                    docker buildx create --use --name mybuilder || true
                    docker buildx inspect mybuilder --bootstrap
                '''
            }
        }

    
        stage('Node install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Set Env Variable') {
            steps {
                script {
                    env.RELEASE_VERSION = sh(script: "echo ${env.GIT_BRANCH} | sed 's#refs/[^/]*/##'", returnStdout: true).trim()
                }
            }
        }

        stage('Login to ACR') {
            steps {
                sh '''
                    echo $ACR_PASSWORD | docker login $AZURE_REPOSITORY_URL -u $ACR_USERNAME --password-stdin
                '''
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                sh '''
                    docker buildx build --push \
                        --file Dockerfile \
                        --tag $AZURE_REPOSITORY_URL/$ACR_USERNAME/staging-jenkins:v1.0.0 \
                        .
                '''
            }
        }
    }
}
